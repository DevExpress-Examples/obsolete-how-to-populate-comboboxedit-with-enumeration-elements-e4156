// Developer Express Code Central Example:
// How to populate ComboBoxEditor with enumeration elements.
// 
// This example demonstrates how to populate ComboBoxEditor with enumeration
// elements. All logic is encapsulated in the BaseComboBoxStyleSettings descendant
// which is defined in the MyComboBoxStyleSettings.cs(vb) file. The representation
// of items in the popup window depends on the enumeration items kind. E.g., if
// enumeration items have description attributes they will display the description
// text instead of item names. If the enumeration definition is decorated with the
// FlagsAttribute attribute, items will be represented as check editors with the
// TextBlock element used as description.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4156

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComboBoxEditEnum.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
